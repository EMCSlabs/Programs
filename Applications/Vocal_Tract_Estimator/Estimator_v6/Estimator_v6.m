function varargout = Estimator_v6(varargin)
% ESTIMATOR_V6 MATLAB code for Estimator_v6.fig
%      ESTIMATOR_V6, by itself, creates a new ESTIMATOR_V6 or raises the existing
%      singleton*.
%
%      H = ESTIMATOR_V6 returns the handle to a new ESTIMATOR_V6 or the handle to
%      the existing singleton*.
%
%      ESTIMATOR_V6('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in ESTIMATOR_V6.M with the given input arguments.
%
%      ESTIMATOR_V6('Property','Value',...) creates a new ESTIMATOR_V6 or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before Estimator_v6_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to Estimator_v6_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help Estimator_v6

% Last Modified by GUIDE v2.5 21-Nov-2015 00:54:38

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
    'gui_Singleton',  gui_Singleton, ...
    'gui_OpeningFcn', @Estimator_v6_OpeningFcn, ...
    'gui_OutputFcn',  @Estimator_v6_OutputFcn, ...
    'gui_LayoutFcn',  [] , ...
    'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT
end

% --- Executes just before Estimator_v6 is made visible.
function Estimator_v6_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to Estimator_v6 (see VARARGIN)

% Choose default command line output for Estimator_v6
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

%handles
delete(timerfindall);
initializeDisplay(handles);
myGUIdata = guidata(handles.SgramGUI);
clc

%myGUIdata
timerEventInterval = 0.1; % in second
timer50ms = timer('TimerFcn',@synchDrawGUI, 'Period', ...
    timerEventInterval,'ExecutionMode','fixedRate', ...
    'UserData',handles.SgramGUI);
myGUIdata.timer50ms = timer50ms;
myGUIdata.smallviewerWidth = 30; % 30 ms is default
myGUIdata.recordObj1 = audiorecorder(myGUIdata.samplingFrequency,24,1);
set(myGUIdata.recordObj1,'TimerPeriod',0.1);
record(myGUIdata.recordObj1)
myGUIdata.maxAudioRecorderCount = 200;
myGUIdata.maxLevel = -100;
myGUIdata.audioRecorderCount = myGUIdata.maxAudioRecorderCount;
% for ax2
myGUIdata.number=1;
myGUIdata.t3yValue=zeros(1, 38);
guidata(handles.SgramGUI,myGUIdata);
start_button_Callback(hObject, eventdata, handles)
end
% UIWAIT makes Estimator_v6 wait for user response (see UIRESUME)
% uiwait(handles.SgramGUI);

function initializeDisplay(handles)
myGUIdata = guidata(handles.SgramGUI);
myGUIdata.samplingFrequency = 21739;
axes(handles.ax1);

myGUIdata = settingForNarrowband(myGUIdata);
fxx = myGUIdata.visibleFrequencyAxis;
tx = myGUIdata.timeAxis;
myGUIdata.SgramHandle = image([tx(1) tx(end)]-tx(end),[fxx(1) fxx(end)],myGUIdata.initialSgramData);
axis('xy');
myGUIdata.titleText = title('Narrowband Spectrogram','FontSize',17);
xlabel('Time (s)', 'FontSize', 14);
ylabel('Frequency (Hz)', 'FontSize', 14);
myGUIdata.linearTicLocationList = get(handles.ax1,'ytick');
myGUIdata.linearTickLabelList = get(handles.ax1,'ytickLabel');

% set(myGUIdata.SgramHandle,'erasemode','none');
% erasemode fcn is unsupported
drawnow expose;

guidata(handles.SgramGUI,myGUIdata);
end

function myGUIdata = settingForNarrowband(myGUIdata)
myGUIdata.windowLengthInMs = 80; % 80
myGUIdata.higherFrequencyLimit = 3600;
fs = myGUIdata.samplingFrequency;
fftl = 2^ceil(log2(myGUIdata.windowLengthInMs*fs/1000));
%fftl = 1024;
fx = (0:fftl/2)/fftl*fs;
fxx = fx(fx<myGUIdata.higherFrequencyLimit);
frameShift = 0.007;
tx = 0:frameShift:4;
myGUIdata.initialSgramData = rand(length(fxx),length(tx))*62+1;
myGUIdata.frameShift = frameShift;
myGUIdata.visibleFrequencyAxis = fxx;
myGUIdata.timeAxis = tx;
myGUIdata.fftl = fftl;
myGUIdata.fftBuffer = zeros(fftl,length(tx));
myGUIdata.lastPosition = 1;
myGUIdata.frameShiftInSample = round(myGUIdata.frameShift*fs);
% myGUIdata.windowFunction = blackman(round(myGUIdata.windowLengthInMs*fs/1000));
myGUIdata.windowFunction = nuttallwin(round(myGUIdata.windowLengthInMs*fs/1000));
myGUIdata.windowLengthInSample = length(myGUIdata.windowFunction);
myGUIdata.dynamicRange = 80;
myGUIdata.maxLevel = -100;
end


function synchDrawGUI(obj, event, string_arg)
handleForTimer = get(obj,'UserData');
myGUIdata = guidata(handleForTimer);
numberOfSamples = myGUIdata.windowLengthInSample;
dynamicRange = myGUIdata.dynamicRange;
fftl = myGUIdata.fftl;
w = myGUIdata.windowFunction;
fxx = myGUIdata.visibleFrequencyAxis;
fs = myGUIdata.samplingFrequency;
if get(myGUIdata.recordObj1,'TotalSamples') > fftl*4
    tmpAudio = getaudiodata(myGUIdata.recordObj1);
    currentPoint = length(tmpAudio);
    if length(currentPoint-numberOfSamples+1:currentPoint) > 10
        myGUIdata.audioRecorderCount = myGUIdata.audioRecorderCount-1;
        spectrogramBuffer = get(myGUIdata.SgramHandle,'cdata');
        ii = 0;
        while myGUIdata.lastPosition+myGUIdata.frameShiftInSample+numberOfSamples < currentPoint
            ii = ii+1;
            currentIndex = myGUIdata.lastPosition+myGUIdata.frameShiftInSample;
            x = tmpAudio(currentIndex+(0:numberOfSamples-1));
            tmpSpectrum = 20*log10(abs(fft(x.*w,fftl)));
            myGUIdata.fftBuffer(:,ii) = tmpSpectrum;
            myGUIdata.lastPosition = currentIndex;
        end;
        nFrames = ii;
        if nFrames > 0
            tmpSgram = myGUIdata.fftBuffer(:,1:nFrames);
            if myGUIdata.maxLevel < max(tmpSgram(:))
                myGUIdata.maxLevel = max(tmpSgram(:));
            else
                myGUIdata.maxLevel = max(-100,myGUIdata.maxLevel*0.998);
            end;
            tmpSgram = 62*max(0,(tmpSgram-myGUIdata.maxLevel)+dynamicRange)/dynamicRange+1;
            spectrogramBuffer(:,1:end-nFrames) = spectrogramBuffer(:,nFrames+1:end);
            spectrogramBuffer(:,end-nFrames+1:end) = tmpSgram(1:length(fxx),:);
            set(myGUIdata.SgramHandle,'cdata',spectrogramBuffer);
        else
            disp('no data read!');
        end;
    else
        disp('overrun!')
    end;
    
    if myGUIdata.audioRecorderCount < 0
        switch get(myGUIdata.timer50ms,'running')
            case 'on'
                stop(myGUIdata.timer50ms);
        end
        disp('Initializing audio buffer');
        stop(myGUIdata.recordObj1);
        record(myGUIdata.recordObj1);
        myGUIdata.audioRecorderCount = myGUIdata.maxAudioRecorderCount;
        myGUIdata.lastPosition = 1;
        switch get(myGUIdata.timer50ms,'running')
            case 'off'
                start(myGUIdata.timer50ms);
        end
    end;
    guidata(handleForTimer,myGUIdata);
    
  
    
    % ax3
    load JW13palpha;
    hamming = @(N)(0.54-0.46*cos(2*pi*[0:N-1].'/(N-1)));
    [ MFCCs ] = ...
        mfcc_rev( x, 21739, 50, 50, 0.97, hamming, [300 3700], 20, 13, 22);
    xy = myNeuralNetworkFunction(MFCCs);

%     plot(myGUIdata.ax3, xy(1:2:size(xy,1),1), xy(2:2:size(xy,1),1), 'or', ...
%         'LineWidth', 2, ...
%         'MarkerSize', 8, ...
%         'MarkerFaceColor', 'k')

        plot(myGUIdata.ax3, pal(:,1), pal(:,2), 'k', 'LineWidth', 1.5)
                hold(myGUIdata.ax3, 'on')

        plot(myGUIdata.ax3, pha(:,1), pha(:,2), 'k', 'LineWidth', 1.5)
    
    plot(myGUIdata.ax3, xy(1:2:3,1), xy(2:2:4,1), 'or', ...
        'LineWidth', 2, ...
        'MarkerSize', 6, ...
        'MarkerFaceColor', 'k')
    plot(myGUIdata.ax3, xy(5:2:11,1), xy(6:2:12,1), 'or-', ...
        'LineWidth', 2, ...
        'MarkerSize', 8, ...
        'MarkerFaceColor', 'k')
    plot(myGUIdata.ax3, xy(13:2:15,1), xy(14:2:16,1), 'or', ...
        'LineWidth', 2, ...
        'MarkerSize', 6, ...
        'MarkerFaceColor', 'k')
        
    
    xlim(myGUIdata.ax3,[-100 40]); ylim(myGUIdata.ax3,[-40 40]);
    set(myGUIdata.ax3,'ytick',[]); set(myGUIdata.ax3,'yticklabel',[])
    set(myGUIdata.ax3,'xtick',[]); set(myGUIdata.ax3,'xticklabel',[])
    title(myGUIdata.ax3, 'Estimated Articulator Trajectory','FontSize',15);

    hold(myGUIdata.ax3, 'off')    
    
    % ax2
    set(myGUIdata.ax2,'XDir','reverse');
    title(myGUIdata.ax2, 'Signal', 'FontSize', 15);
    if myGUIdata.number<=38
        if myGUIdata.number==1
            hold(myGUIdata.ax2,'off')
        end
        myGUIdata.t3yValue(1, myGUIdata.number)=xy(8,1);
        plot(myGUIdata.ax2,1:myGUIdata.number,myGUIdata.t3yValue(1:myGUIdata.number),'b', 'LineWidth', 1.2)
        hold(myGUIdata.ax2,'on')
        xlim(myGUIdata.ax2,[0 38]), ylim(myGUIdata.ax2,[-10 20])
        myGUIdata.number=myGUIdata.number+1;
        drawnow
    else
        hold(myGUIdata.ax2,'off')
        for map=2:length(myGUIdata.t3yValue)
            myGUIdata.t3yValue(1, map-1)=myGUIdata.t3yValue(1, map);
        end
        myGUIdata.t3yValue(1, end)=xy(8,1);
        plot(myGUIdata.ax2,1:38,myGUIdata.t3yValue,'b')
        xlim(myGUIdata.ax2,[0 38]), ylim(myGUIdata.ax2,[-10 20])
    end
    guidata(handleForTimer,myGUIdata);
    
    % ax4
    N = 500;
    [Y,freq] = spectrum_rev(x, 21739);
    plot(myGUIdata.ax4,freq(1:(N/2)+1),log2(abs(Y(1:(N/2)+1))),'b');
    grid(myGUIdata.ax4,'on');
    xlim(myGUIdata.ax4,[0 3600]); ylim(myGUIdata.ax4,[-15 15]);
    xlabel(myGUIdata.ax4,'Frequency in Hz');
    ylabel(myGUIdata.ax4,'Log-base-2 of Amplitude');
    title(myGUIdata.ax4,'Spectrum','FontSize',15);
    
else
    disp(['Recorded data is not enough! Skipping this interruption... at ' datestr(now,'mmmm dd, yyyy HH:MM:SS.FFF AM')]);
end;
end



% --- Outputs from this function are returned to the command line.
function varargout = Estimator_v6_OutputFcn(hObject, eventdata, handles)
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;
end


% --- Executes on button press in start_button.
function start_button_Callback(hObject, eventdata, handles)
% hObject    handle to start_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
myGUIdata = guidata(handles.SgramGUI);
set(myGUIdata.start_button,'enable','off');
set(myGUIdata.stop_button,'enable','on');
set(myGUIdata.play_button,'enable','off');
switch get(myGUIdata.timer50ms,'running')
    case 'on'
        stop(myGUIdata.timer50ms);
end
myGUIdata.audioRecorderCount = myGUIdata.maxAudioRecorderCount;
myGUIdata.lastPosition = 1;
record(myGUIdata.recordObj1);
switch get(myGUIdata.timer50ms,'running')
    case 'off'
        start(myGUIdata.timer50ms);
    case 'on'
    otherwise
        disp('Timer is broken!');
end
guidata(handles.SgramGUI,myGUIdata);
end


% --- Executes on button press in stop_button.
function stop_button_Callback(hObject, eventdata, handles)
% hObject    handle to stop_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
myGUIdata = guidata(handles.SgramGUI);

set(myGUIdata.start_button,'enable','on');
set(myGUIdata.stop_button,'enable','off');
set(myGUIdata.record_button,'enable','on');

switch get(myGUIdata.timer50ms,'running')
    case 'on'
        stop(myGUIdata.timer50ms)
    case 'off'
       
    otherwise
        disp('Timer is broken!');
end;
myGUIdata.audioData = getaudiodata(myGUIdata.recordObj1);
stop(myGUIdata.recordObj1);
guidata(handles.SgramGUI,myGUIdata);
end


% --- Executes on button press in record_button.
function record_button_Callback(hObject, eventdata, handles)
% hObject    handle to record_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

myGUIdata = guidata(handles.SgramGUI);
set(myGUIdata.start_button,'enable','off');
set(myGUIdata.stop_button,'enable','on');
set(myGUIdata.play_button,'enable','off');

switch get(myGUIdata.timer50ms,'running')
    case 'on'
        stop(myGUIdata.timer50ms);
    case 'off'
    otherwise
        disp('Timer is broken!');
end;

myGUIdata.recordObj2 = audiorecorder(myGUIdata.samplingFrequency,24,1);
recordblocking(myGUIdata.recordObj2,str2double(get(handles.record_second,'String')));
myGUIdata.audioData2 = getaudiodata(myGUIdata.recordObj2);

load JW13palpha;
myGUIdata.pal= pal;
myGUIdata.pha = pha;

hamming = @(N)(0.54-0.46*cos(2*pi*[0:N-1].'/(N-1)));
[ MFCCs, ~, ~ ] = ...
    mfcc_rev( myGUIdata.audioData2, 21739, 50, 50, 0.97, hamming, [300 3700], 20, 13, 22);
myGUIdata.xy = myNeuralNetworkFunction(MFCCs);

set(myGUIdata.play_button,'enable','on');

guidata(handles.SgramGUI,myGUIdata);
set(handles.SgramGUI,'UserData',myGUIdata)
end


% --- Executes on button press in play_button.
function play_button_Callback(hObject, eventdata, handles)
% hObject    handle to play_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% myGUIdata = guidata(handles.SgramGUI);
myGUIdata = handles.SgramGUI.UserData;

% soundsc(myGUIdata.audioData2,21739);
warning off

durT = length(myGUIdata.audioData2)/21739;
t = 0:1/21739:floor(durT);
y = [0; myGUIdata.audioData2];
set(myGUIdata.ax2,'XDir','normal');
plot(handles.ax2, t, y(1:length(t)))
minY = min(y); maxY = max(y);
xlim(handles.ax2, [0 round(durT)]);
ylim(handles.ax2, [minY-.0001 maxY+.0001]);
xlabel(handles.ax2,'Time (s)');

frameRate = 25; % fps
frameT = 1/frameRate;

playHeadLoc = 0;
hold(myGUIdata.ax2, 'on');

player = audioplayer(y, 21739);
% player = audioplayer(y, myGUIdata.audioData2.fs);
player.Userdata.x = t;
player.Userdata.y = y;

set(player, 'TimerFcn', @c_bar);
set(player, 'TimerPeriod', .01);
play(player);


set(myGUIdata.ax3,'ytick',[]); set(myGUIdata.ax3,'yticklabel',[])
set(myGUIdata.ax3,'xtick',[]); set(myGUIdata.ax3,'xticklabel',[])

for k = 1:size(myGUIdata.xy,2)
    plot(myGUIdata.ax3, myGUIdata.pal(:,1), myGUIdata.pal(:,2), 'k', 'LineWidth', 1.5)
    xlim(myGUIdata.ax3,[-85 35]); ylim(myGUIdata.ax3,[-35 35]);
    hold(myGUIdata.ax3, 'on')
    plot(myGUIdata.ax3, myGUIdata.pha(:,1), myGUIdata.pha(:,2), 'k', 'LineWidth', 1.5)
    plot(myGUIdata.ax3, myGUIdata.xy(1:2:size(myGUIdata.xy,1),k), myGUIdata.xy(2:2:size(myGUIdata.xy,1),k), 'or', ...
        'LineWidth', 2, 'MarkerSize', 8, 'MarkerFaceColor', 'k')
    hold(myGUIdata.ax3, 'off')
    pause(1/21739*660)
end

hold(myGUIdata.ax2, 'off');

end


function src = c_bar(src,eventdata)
myGUIdata = guidata(handles.SgramGUI);

c_sample = get(src, 'Currentsample');
sig = get(src, 'UserData');

plot(myGUIdata.ax2, sig.x, sig.y); axis tight; shg
hold on
plot([c_sample c_sample], [-1 1], 'color', 'r', 'linewidth', 2);
hold off
end


% --- Executes during object creation, after setting all properties.
function record_second_CreateFcn(hObject, eventdata, handles)
% hObject    handle to record_second (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end
end


function record_second_Callback(hObject, eventdata, handles)
% hObject    handle to record_second (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of record_second as text
%        str2double(get(hObject,'String')) returns contents of record_second as a double
end


% --- Executes on button press in load_button.
function load_button_Callback(hObject, eventdata, handles)
% hObject    handle to load_button (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

myGUIdata = guidata(handles.SgramGUI);
set(myGUIdata.start_button,'enable','off');
set(myGUIdata.stop_button,'enable','on');
set(myGUIdata.play_button,'enable','off');

switch get(myGUIdata.timer50ms,'running')
    case 'on'
        stop(myGUIdata.timer50ms);
    case 'off'
    otherwise
        disp('Timer is broken!');
end;

[fname,fpath] = uigetfile({'*.wav'; '*.*'},'File Selector');
myGUIdata.recordObj2 = [];
[myGUIdata.recordObj2, fs] = audioread([fpath,'/',fname]);

if strcmp( num2str(fs), '21739') == 0;
    [P,Q] = rat(21739/fs);
    myGUIdata.audioData2 = resample(myGUIdata.recordObj2,P,Q);
else
    myGUIdata.audioData2 = myGUIdata.recordObj2;
end

load JW13palpha;
myGUIdata.pal= pal;
myGUIdata.pha = pha;

hamming = @(N)(0.54-0.46*cos(2*pi*[0:N-1].'/(N-1)));
[ MFCCs, ~, ~ ] = ...
    mfcc_rev( myGUIdata.audioData2, 21739, 50, 50, 0.97, hamming, [300 3700], 20, 13, 22);
myGUIdata.xy = myNeuralNetworkFunction(MFCCs);

set(myGUIdata.play_button,'enable','on');
set(handles.SgramGUI,'UserData',myGUIdata);

guidata(handles.SgramGUI,myGUIdata);

end


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%% Useful functions %%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


function [Y,Xf,Af] = myNeuralNetworkFunction(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Generated by Neural Network Toolbox function genFunction, 27-Aug-2015 17:04:12.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timsteps
%   Each X{1,ts} = 13xQ matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = 16xQ matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1_xoffset = [44.756124711546;-18.6784164631382;-18.9995325869995;-27.7892641645529;-22.5256896709422;-23.371613387803;-28.9028015146938;-26.7821082119012;-33.5346406020699;-28.0082677777628;-22.5263193541408;-22.1792092786869;-20.6978161789832];
x1_step1_gain = [0.0566739930277191;0.0629545151816092;0.0460121573132586;0.03739821058918;0.0446194572734336;0.0406908627724293;0.0399532488102047;0.0398692598259012;0.0380264916931647;0.0404421295113155;0.0454578219305072;0.0514155207879433;0.047198287629255];
x1_step1_ymin = -1;

% Layer 1
b1 = [1.3594255086028144142;-4.1811760601961101003;1.3163403471421566415;3.094906139405826373;1.4348569288709338565;1.2849600570304287039;1.7709691793196324916;-0.72947462358581760533;0.36989413633529050207;0.0078109524919518372524;1.294190154980612073;0.29298672007757359248;1.2442376375368358055;-0.70818983046692107752;-0.52012071466921905305;0.079155821485128952109;0.5227352535369480524;0.33058099880135982662;0.091780563678764748303;1.217101374113414014;-1.1690231235948025379;-0.38068421396897295095;1.1166368445717025359;-1.3720694628387266611;1.3812857185981304298;-5.4847714707405303969;1.307812333408474359;-1.5246697430884470492;-2.7157388590677697948;2.1247896847244502894];
IW1_1 = [-0.71339077409568496524 0.10242076175941827731 -0.47435179767229718184 -1.5335081551208571415 -0.86652120920291320072 0.0016471621484480513525 -0.19246029128079228387 -0.26532856449136149601 0.47052607226185005906 -0.41661782623757548372 0.049843351629595501751 0.0028527889948039408113 0.17475165749027718465;-0.12522859304059005825 2.233101119065766138 -1.2047271290669141486 -3.3004824846352112111 -1.9942967117683101375 -0.28421204242956804586 0.6680165061271114979 0.86152303929291185192 -0.049258155538205658508 0.9126888543142407384 -0.15424965738789270242 -0.13884774576097153043 -0.6434400105399873393;0.29237595461519833018 0.10662238260588992322 -0.11981787424209716653 0.99105199192130044583 1.094127205285206017 -0.33431174727303675231 0.40431978733584222896 -0.062952652715727114296 -0.48831365714633501174 -0.21957640417295756774 0.39809160455525943734 0.0059076967908695317971 0.28046992790663771711;-1.5093048055931068685 -1.3367409745589244885 -1.6044307864353877235 1.7892210625697346771 1.6837638442959126373 0.82932853458642552535 0.031696883125028933736 0.46289425172590747959 -0.4591994294607324445 0.421921339830126918 -1.9388918637491696639 2.1045830538248688768 0.6005885515493363247;0.35577093990189812001 0.548440176327325557 -0.27971345833411997983 1.2020463501008085139 1.7625411737751643937 -0.24264436862167995668 0.39441740250792273192 0.2350908204738155205 -0.73353909109532366983 -0.36333082115267556489 0.30819797956565836428 -0.10501050410176368533 0.36314190812395236163;0.11886168382353540229 0.033721364146200728806 0.38609168157808027022 2.6931618130275949419 -0.38004516097617646597 0.96155834057439215634 -0.62118127712211268499 0.65225351298952727319 -1.2102662717160814765 0.23971697180556980622 -0.16626420332071342734 -0.37455558340771616388 0.1876933278055867016;0.3219586007895233748 -0.7796891822166037711 0.30544791761925893514 1.3836938798174347465 -0.61574612889382729364 -0.4492655711306239863 -0.31289745622836367955 0.23771410367189177437 0.55951372415821565287 -0.4474315833455977387 0.33762142796597605088 -0.46636052663133059637 0.2216999210752852445;1.0586440209408858326 -0.051601428883437945594 -0.14009045624888752379 0.60154667829836805382 -0.020928495512973915166 0.25623729384373461482 0.022602906596009501167 -0.38450939029229991295 -0.72299096575085552985 -0.065689101195668384015 -0.71837175212767268029 0.077155523712741536091 -1.0210083080953076262;-1.4225768812485046766 -1.4433254103656127931 1.7985391709549218842 -0.9799415264613722254 2.1938207887837140042 -1.9366203797579495394 0.10102197870626133946 -0.65720786603558867256 0.14797614590374713606 -0.053442887567323731079 0.62967081749740461127 -0.09850013737617512033 1.3247699458893005264;-0.26455764421566679845 0.76764022136986076461 -1.2700600979782314948 -0.26108194122870798104 0.22879888712134360818 0.11945288852803181978 0.48319561209363620646 0.59283481895087897229 -0.625584109514380593 -0.11958687437579849921 -0.047934442074867439354 -0.63859799506234593558 0.2980542996097252928;-1.8368518557285242743 -0.47550157081476873699 -1.0391115008054834234 -0.42767729436259643849 1.1933961899122975669 -1.962293109581718431 0.86924085517410121238 -0.42643587029959301171 0.16470304895557780211 0.81768896945028335388 -0.52844060106216927952 0.46631442218407803679 0.0026814728034293081743;-0.45674590017039734535 -0.23362779037500835955 -0.71901444498278410666 -0.43713137016008335456 -0.75325780756031046614 -0.22250324190177664385 0.08849680388658395791 0.021821332130893784235 -0.20241570227590016673 -0.18620094978745996284 -0.45011784918170660852 -0.27119246409831687661 -0.24562107095160110037;0.45082730533054254929 -1.8000921104332734402 -1.4291476066876800388 1.6721784146906748525 0.2774092335691618616 0.37427971264904830173 -0.63319145494084161374 0.19103176418098427591 0.003652486558734738091 -0.25082553093992238091 0.50734357288529374763 -0.46161287281871604682 0.30629668416883154558;1.4300518689825443275 -0.15471580407297005899 0.10140714057820342242 -0.57263863453066932152 0.0022724605814847236712 0.141073313015377233 0.40442895134228606935 -0.2179026671646279445 -0.13603246401257187981 -0.24644493247379589684 -0.36627908222391863946 0.35042679918966296304 -0.76109844361053902162;0.56918679156901197391 3.6815871859967677082 1.4454468834345206574 0.33461859281801337174 0.047147231516371762572 0.060647153832931108286 -0.048804236973213982465 -0.20993132100762049164 0.68030311851508973309 0.63485532971775293642 0.2013337838863071827 0.32777934911387240913 0.93627805087441717813;-0.2037029816379185565 0.36589525826130830932 1.2391975576149336646 -0.61032595248666854371 -0.47086400814205492393 -0.68606684884228386068 0.42878834735657073152 0.08460122253640617318 1.0665220857385306896 -1.3142862125691607833 0.41559467073461431319 -0.69298575436826947982 0.2851460584042033175;-0.78575604319827763167 -1.8761124579923609268 0.83757666961697530006 0.63047485214809018128 -1.0737969057579705989 0.8239948815431425988 0.61491404959879325531 -0.39301783445007193452 0.21672065714422186766 -0.6079418436413185356 0.35475513041374007184 -0.37886929589929441153 0.23188891803019451299;-0.44924108883107821688 -0.28044840858420427843 -1.1991087528606894086 -0.44531667143581421531 -1.1235287291174507196 0.20838189283746483271 0.21428448237345065763 0.49592846785520489084 -0.14329433452379813918 -0.073252391260306734533 -0.55308810851821554877 -0.34823309661729640041 -0.39418896942104142411;-0.84956814204935837687 -0.66177165116826019986 0.61349819043557829445 -0.44762777863344860307 -0.059831785870827575158 -0.649542230474250748 0.42698934478550853999 -0.40733642086243282421 0.26505526082873032134 -1.2592851239495328475 -0.069550300258991365476 -0.53964831420026637687 -0.1838903629634357495;-0.012485096346691424915 0.21738803398331463246 0.97129562227480381598 0.45234728023349746184 -0.38374009552920573807 -0.50153524831779328075 -0.19098899690438478349 0.1192864527844248318 0.28789799543014560346 -0.15089403750650495772 0.027917757680504758089 -0.17137575543121547073 -0.010880461750141770874;-0.76364725968557756186 -2.541375287275621897 0.91418264250778924485 0.70070787499377507057 -0.046032746711109961968 2.5259090889452613382 -0.68106039243883786938 -0.85967389196549282016 0.38438754674069336437 0.78541280937179724919 0.52191977253395560599 -1.1788472548259603112 0.34558041389040800029;0.00057677334210885257415 0.45785382454916345729 0.9360391542713311086 0.88312320912041175625 -0.4650085552504351627 0.27116459145118609886 -0.7607222395765096401 -0.1435843954504033293 1.1990357967739713185 0.50600609045707245492 0.026935685413635668262 0.15388920423379243152 -0.05758375024206179027;0.22343442179755834687 -0.32450175491609434264 -0.25889533336485021087 2.0752522075990755823 -0.4846204971663631289 0.72474451745439583128 -0.33630334368930742128 0.076206544722407287829 -0.53424589585055937135 -0.052369800695867295415 -0.060614562488668824458 -0.13329372815255605134 0.012415408920873552065;-0.39845404711768783734 -0.76947701959304970476 1.4052403209791151095 -0.43904008619226986276 -1.0180291101814451515 0.45321539085075279729 -0.081582338038524243595 -0.64616961966097574699 0.63448306002136678483 -0.20050160796974780819 0.19922658702991127844 -0.10417230351333228722 0.2929640387438021687;0.56932003438463996137 1.1381299126447879111 -1.2160965866803545854 0.14672584199180913056 0.51255854233167674749 -0.71371884850644973231 0.19454985329488955204 0.42098614531990019572 -0.28205791392238033222 0.16982549035186927933 0.010114510090499842163 -0.081189221269581696161 -0.12156218669985027758;-2.5054698695184987045 -0.55255106017062693979 -1.8594758970567066836 -6.9037451105846701083 1.0531135383257839155 0.95864583264327352108 0.30018911831666317269 2.3252620929081073697 -1.0064364520954081073 1.2600354589061661947 -1.7666886123363396699 1.1244288621567350983 0.23066013829700779403;0.35993098555511260361 -1.0105698934565929825 1.097666251254759695 -0.54974439753671333619 -0.58568525444306873684 0.89931445184001546078 -0.5298808831181319734 -0.035208346157655646957 0.052690243840589172375 -0.098136491177945497921 -0.14378424030830050384 0.38506975287058387014 -0.49198804199528639591;-0.674312458015546623 -1.6980614663273634335 -1.7587920746376441983 -2.3905691311181755943 -1.7149780471428255346 -1.7424600184266516578 -4.0756920985158515691 -1.309806549678071752 -2.7389257394701016501 -2.3777927555259985581 -1.2246248185054122715 -1.7301371437076200621 -1.5287219995808190021;-0.77901157465988990491 -2.3013419064829419014 1.3741897450378419698 0.17357736710829993476 -1.3511640183374464819 1.2656750280528421548 -0.49430485671892587796 -0.82834787775577412017 0.43180191881663143594 0.42704634400933599858 -0.25759810988277676014 0.48816728944296045034 0.018109679182915814494;0.18038998314793838751 0.83418522881694012749 2.5449544377521395866 0.71748633263971695051 -0.6862343829734663947 -1.105937212628275379 -0.48241043027766433715 -0.15016567835728661384 0.19810366991477970644 -0.011808595599976046131 0.075953866911872586209 -0.38275437503731057909 -0.087736157112103627109];

% Layer 2
b2 = [1.1311012549253289805;0.62433898969389900468;0.66544225170064630337;-0.4554817344980658933;-1.2563802908523811208;-0.30024780609235229845;-1.5469545361565602004;0.14320177908110265363;-1.5505422957553471885;-0.21320542494777608433;-1.0003499726907238987;-1.1869984423908541693;-0.24619937220864021588;-0.81874886175737005001;-0.099552689289797463568;-0.79034981284414129732];
LW2_1 = [0.12987702055252939304 0.30921609394984750363 -0.3216494958285058825 -0.018531451972623208535 0.17146928381605014424 -0.14901754667746597294 0.50664013339690483484 0.24223414296492468134 0.12750135760616310154 -0.23460936671918655727 0.035542076308900695525 -0.9361782092628906371 -0.30069814083763835022 -0.14844824436315040561 0.097171742184470680237 0.23916693636759311925 0.033359833637558893027 0.5195062838938935279 0.1775751055382105148 -1.88615598264947959 0.10000267554373844237 -0.12888304716432050223 0.35349951026451786884 0.02877777382320212754 1.0541647370504614312 0.37426166683462219753 -0.20680146090710876949 0.05622793507742022967 0.57466069319691515105 0.70213314077843969052;0.067616029049627088265 0.33618977719132897564 -0.49161941519535024003 0.006918021135377213672 0.29870264410661639953 -0.29015207822498301216 0.06649910756856719507 0.14523628533184965161 0.10708005881162110939 -0.21138000919213834061 0.0038563074335492613862 -0.76251741027485553381 -0.045237705746252965255 -0.098964029799813460486 0.059539913642409611483 -0.05421943597629799716 -0.024161153175689061706 0.52728757814557492001 0.13585376988641539864 -0.0049917999625575214251 0.050811332565592809418 -0.22483017678437317022 0.42760855550848880791 0.22200529699882626256 0.55021438405773115399 0.27777086749955515188 -0.16811499952112757272 0.049699498114169723961 0.22285726279918030568 0.15033000562918991116;-0.026005292987771530533 0.23779325153915009672 -0.11240021981953293717 -0.03403649310297494901 0.13629778076482637617 -0.20525726732665194874 0.37881213625102116982 0.17950483880692649774 0.14771363452049512954 -0.30147217585123770034 -0.036639663281561894725 -0.96037724809022750883 -0.20950469793058351664 -0.25199749451127723132 0.16570141065836879735 0.10917702543075347155 -0.077804463123950354242 0.70655761392456439829 0.26267338589412014827 -1.5530856242304500459 0.049629896216878861825 -0.16966470512130432668 0.38376317366371948125 0.015675368037485006706 1.1087437976136795825 -0.0044163005098179514835 -0.013032691122284823654 0.084385332475018587362 0.70514257878175579108 0.60655191632398086643;0.12440261893568738127 -0.2510821687194229046 -1.0842903546677935545 0.032215541949832796065 0.82240327816272318362 -0.32517875107238380927 -0.27937769416458757554 0.26743047062353098031 0.091400861425898066726 -0.38712605532654270624 -0.0076000958366125382151 -1.4962375967636052376 -0.11024761232164931313 -0.44093346651200060471 0.18420377813852389925 -0.12367145231905868341 -0.081884457860512877003 0.9919114603641489003 0.38431629807354739103 0.021457706982845693722 0.10500634827154450845 -0.31596263895513176934 0.56238426674495056723 0.3075891316204514836 1.4334007381191498087 -0.499788042937353294 -0.09059315344308341289 0.10211281216259270044 0.79169177364129816876 0.46092848079034204334;-0.062097913007029839627 0.45956805645493209456 1.2892984397821154463 0.30606561077762539647 -0.96631908503635888241 0.44812539069972545658 -0.79907528748189682322 -0.31187672307500896585 -0.18249918481362173428 0.4072746113985992733 -0.077617397269527724224 0.21200497050815683697 0.62238012110105178643 0.13419554650958079312 0.045968313075456221362 -0.47887392357808267196 0.014392368044797008986 -0.29359732100010366151 0.25143789849656938973 2.8321563279194683638 -0.040523686974720911358 0.1160765898912314853 -0.98267201487246169656 -0.54147499535620080557 -1.1169132077227506006 -0.3446568141587432188 0.42306813653977476397 0.01702715109167518906 -0.46158534340984141986 -0.9268576407362537628;0.34098727539971762646 -0.047121612721925505707 -2.4655495553160413635 0.0016419741355765610832 1.551903906701358915 -0.6344136312069014183 -1.2866901251292741648 0.43870812159039557221 0.19438408089208861207 -0.48984159918809422329 0.22743435684839224953 -2.2074786840321820591 0.22051804257684443078 -0.31053329147887431816 0.13801749643397875911 -0.27787143058596613931 -0.03844912925398622644 1.4192923164137725145 0.36659211821774428941 2.0885713273356318886 0.1758311542615199341 -0.55025810153122312052 1.2335240155726512334 1.1646702798778147958 1.7781120128102321232 -0.48437315734040042869 -0.45104055499619027936 0.065845142522724608991 0.62080287151958390979 -0.081932824552163011078;0.042320820584552235055 0.23439469787796798905 1.7882896691653575871 0.24844049382567670592 -1.2987020591783571266 0.38639859197795600743 -0.67721570861660207452 -0.29657829532048390897 -0.19467964077957033986 0.50463695944875175403 -0.042648697301123278391 0.21963988944813306325 0.4905971322139335844 0.20524083626540406966 -0.015753435495151610346 -0.43021156744589444942 0.079068865929598858289 -0.38920930720392160618 0.20462076712335025563 2.5170850903976060842 -0.081044300319447745706 0.22439992230918609506 -0.81052027199694720583 -0.60388975483349283113 -1.4856911340089502538 -0.2202766912025769519 0.36956840955416009331 0.031877231847112830199 -0.70742680496510468302 -0.78978305218689104361;0.37970566222887991437 -0.25048748795356684527 -1.3423599287391436707 -0.057956219156038074614 0.880087637074895901 -0.50379706975924753998 -0.36585245405995581169 0.42391812291485669872 0.11219692352333522634 -0.32333152831458533694 0.2370281610668251715 -1.5834065649822750554 -0.020042183867293696803 -0.18772340015654293 0.048974200998908666571 -0.018316301223900318534 0.20332170277596142705 0.9612009507804294417 0.11112269895174076151 0.67786329457071015092 0.12380400480453243595 -0.26133374109997897783 0.97173348787930868831 0.60382595775771508162 0.56544258581339701397 -0.1126100657259603427 -0.64600769409336278315 0.07563614198529086674 0.14347504425761722913 0.19339034144466185627;0.038853965391840793175 0.080774952101909769375 1.6273839083098835534 0.20645785092680921102 -1.2232540653195822511 0.30972561801175119145 -0.6235332905137619397 -0.23743945842275740454 -0.1304651311916745493 0.43437630318138376051 -0.0043422255130685918564 0.022674117193323337083 0.44266332361934235262 0.20587689363706612733 -0.011187126614949784165 -0.35998390009872982542 0.059933374471637393399 -0.2392986959460965124 0.18046213521963280768 2.3051042088351745285 -0.063235293524272762067 0.15473761573991229312 -0.59627271994118380416 -0.43251421018125679741 -1.1821644991482074261 -0.16650232103864787137 0.30521940474333741911 0.040817758940334625262 -0.58872488159900748794 -0.69397953563737724281;0.51513484199718451162 -0.28551162579846361966 -0.18375551420230187838 -0.05132093731181947005 0.010431198294774415847 -0.27436403845463092077 -0.00081880827726097532571 0.38208663991172125973 -0.0002244442443987890428 -0.021825774049502956464 0.1349547596602819477 -1.2573483892445764809 -0.17454141182609522742 -0.19914996194393586038 -0.020365678909408553576 -0.012604737429424193659 0.31474406670271132258 0.54448622930108769857 0.10819559688266487674 0.40760930478403656352 0.097973431854267933883 -0.049394559451867395272 0.53102449609422086585 -0.0055932559745634005677 -0.20711527122720033156 0.030616068734349053543 -0.51774777913081992953 0.070249955452442544579 -0.14705953468340476897 0.19879453738698818488;-0.022978761893835502467 0.067068779414125159755 1.1005963658500725888 0.18765675771294201835 -0.84908960655244758442 0.2241680479053886621 -0.66586607686289500663 -0.19988661478387523274 -0.087707818625531161483 0.23884898521313713271 0.0911837060441227365 -0.082404955872055776767 0.47099794034440217727 0.2806543074080571909 0.0036587311424655481751 -0.286687075328278973 0.088499340772199647231 -0.088303242782186749937 0.13560130689816696226 2.0761695664300243713 -0.044486936288024671315 0.092323645225463601971 -0.34410270417373750584 -0.10805524493167475986 -0.99259384235773806537 -0.15521711999357537537 -0.0063017127301841962053 0.038266899508292116783 -0.57955933757551991725 -0.57792789987596004941;0.61861479998585777729 -0.2172920296872793422 0.58423156565475076185 0.022186313594190543164 -0.6560707586992188256 0.023465257209427655555 -0.0036905136173894792506 0.24802531387647863692 -0.042340695871822910112 0.27051359904071620166 -0.041931902286435084048 -1.1166619606964176548 -0.18415906591950315097 -0.2535972183478272246 -0.03869203341897677062 -0.14047312632575592595 0.17507571245387312797 0.26425582823828230872 0.2555797103101173362 0.85340848001325564365 0.097136994761397074671 -0.037599316021409284749 -0.049808100340094627057 -0.36728871133536439286 -0.12419605919207811484 0.00085709370109028561353 0.050354080791852461052 0.067037743137182484454 -0.063741017627548621216 -0.017694026618833815639;-0.027702293997993676644 0.14950698227110995053 0.56022697916844610422 -0.02485053664660323916 -0.36972569141252936697 -0.16546011562322016086 0.2035101712817048436 0.12586616021951310684 0.17294185443343945696 -0.13866138983685563635 -0.014077055413232460179 -1.0798905358233461538 -0.056581609472457848609 -0.12948309747067102138 0.15886466923152445241 0.021078503328605002753 -0.087103871558032064382 0.81476776370045611575 0.21812914024870555529 -0.15998241403218574352 0.035074715782746547499 -0.17494136327250356389 0.39787682969829823998 -0.10051052136349752919 0.75082752692796161931 0.0029841773688485833706 0.11048643797355629792 0.12495936241440963599 0.53925876773492043004 0.015412375664587677285;0.23863899842362387704 -0.25509284752733707435 -1.5786334951557683404 0.059190423149814971882 1.1332488872556800708 -0.50034847867120790799 -0.70701094858484003769 0.39909153896848920118 0.17946185021391081182 -0.41851518482841137958 0.056690402642218834517 -2.0108514684762934799 0.062090672926608962701 -0.4739497099115815848 0.20375241203826413572 -0.19649083543617718028 -0.086071831638567283806 1.3446134642022369299 0.39759311269451780291 1.2427786690367510491 0.16429740031584666449 -0.50508844974935573902 0.79430708188589715935 0.59422704136392900942 1.7223386419375974477 -0.56647797179717518379 -0.093919489118200180644 0.11924715646361150334 0.85611051395671056152 0.17015467583131696494;-0.04926971245867285687 0.10635334562777788714 0.55431417913475533599 -0.037827289570431445187 -0.41897708905717434558 -0.16609459350971347846 0.24827387288301860924 0.071094986323418193908 0.10932966270127603137 -0.092536148068669513145 -0.0016962073054661553316 -0.70334810768439415263 -0.080542972814986332764 -0.1017915615114814154 0.121653860159643884 0.0569007427784486014 -0.076558957707571220763 0.50734279235007284647 0.12723544866639949213 -0.25817823257115346536 0.01208238701716187781 -0.15169941351657167949 0.41191207810393709599 -0.11767886078649475445 0.47258796632419503014 -0.01027545360206458952 0.11476144989205216973 0.098067928738406237588 0.36518172551902977618 0.033590815969287722564;0.23231445509279316508 -0.23976067753897689627 -1.666491903484570658 0.04632125492791736715 1.1764338128697540142 -0.48943667547924629702 -0.71295522720746773437 0.39558542200255969457 0.16885668648523896596 -0.40851972214490911428 0.07342549323621147539 -1.916189497637796002 0.079418710632377376157 -0.45107972992178513305 0.18740370073986306609 -0.2021590018119200638 -0.072486134623715323122 1.2802988057955975165 0.36097008201492813972 1.2953188775894100004 0.17424960429894675862 -0.49932213851413542738 0.74121681887135471012 0.64526851024392983813 1.6551569903224827573 -0.49904656789297791031 -0.11249450421519661958 0.10600326102832348385 0.79243666387572020415 0.13480768527463293793];

% Output 1
y1_step1_ymin = -1;
y1_step1_gain = [0.196560196560197;0.193124758594052;0.137741046831956;0.0726084588854602;0.0783085356303837;0.0689464975179261;0.0825525240434226;0.0715640319175582;0.0846668360003387;0.094921689606075;0.0903750564844103;0.110497237569061;0.246822164630384;0.0885347498893316;0.190985485103132;0.116312881651643];
y1_step1_xoffset = [8.722;6.986;2.578;-31.975;-28.264;-16.422;-38.558;-11.379;-49.757;-5.853;-61.826;-6.069;-3.895;-25.197;-41.667;-21.715];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX, X = {X}; end;

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},2); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    Xp1 = mapminmax_apply(X{1,ts},x1_step1_gain,x1_step1_xoffset,x1_step1_ymin);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1_gain,y1_step1_xoffset,y1_step1_ymin);
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX, Y = cell2mat(Y); end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings_gain,settings_xoffset,settings_ymin)
y = bsxfun(@minus,x,settings_xoffset);
y = bsxfun(@times,y,settings_gain);
y = bsxfun(@plus,y,settings_ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings_gain,settings_xoffset,settings_ymin)
x = bsxfun(@minus,y,settings_ymin);
x = bsxfun(@rdivide,x,settings_gain);
x = bsxfun(@plus,x,settings_xoffset);
end

function [Y,freq] = spectrum_rev(signal, srate)
%
% Plot log magnitude of FFT spectrum 
% after applying Hamming window
% Input arguments:
%	signal		signal to analyze
%	srate		sampling rate in Hz

N = 500;
first= 1;
last = first+N-1;

% Plot original and Hamming windowed signal
% compare (signal(first:last), hamming(N) .* signal(first:last))
% pause

signal = signal';

%Y = fft(signal(1:N) .* hamming(N));
Y = fft(signal(1:N));
% get frequency values of successive fft points
w = 0:2*pi/N:2*pi-(2*pi/N);  % these are values in radians/sample
freq = w*srate/(2*pi);       % these are values in Hz

end